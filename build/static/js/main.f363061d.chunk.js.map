{"version":3,"sources":["components/Lista.jsx","components/Form.jsx","components/Board.jsx","App.js","serviceWorker.js","index.js"],"names":["Lista","props","react_default","a","createElement","List_default","component","lista","map","jogo","ListItem_default","button","onClick","onListSelect","ListItemText_default","primary","name","Form","noValidate","autoComplete","style","padding","TextField_default","fullWidth","id","label","placeholder","value","item","onChange","handleChanges","margin","InputLabelProps","shrink","release_date","publisher","platform","category","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","axios","get","then","response","setState","listData","data","onNewData","selected","onItemSave","console","log","state","post","objectSpread","catch","e","put","toString","onItemDelete","delete","event","defineProperty","target","Grid_default","container","spacing","xs","Paper_default","components_Lista","components_Form","onSave","Button_default","variant","color","marginLeft","marginBottom","backgroundColor","React","Component","App","className","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2TAoBeA,MAdf,SAAeC,GACX,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,UAAU,OAEZL,EAAMM,MAAMC,IAAK,SAAAC,GAAI,OACrBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAUQ,QAAM,EAACC,QAAS,kBAAMX,EAAMY,aAAaJ,KAC/CP,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAcY,QAASN,EAAKO,6BCsC7BC,MA/Cf,SAAchB,GACV,OACIC,EAAAC,EAAAC,cAAA,QAAMc,YAAU,EAACC,aAAa,MAAMC,MAAO,CAACC,QAAS,SACjDnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EAACC,GAAG,gBACbC,MAAM,OAAOC,YAAY,KACzBC,MAAO1B,EAAM2B,KAAKZ,KAClBa,SAAU5B,EAAM6B,cAAc,QAC9BC,OAAO,SACPC,gBAAiB,CAAEC,QAAQ,KAE/B/B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EAACC,GAAG,oBACbC,MAAM,gBAAgBC,YAAY,IAClCC,MAAO1B,EAAM2B,KAAKM,aAClBL,SAAU5B,EAAM6B,cAAc,gBAC9BC,OAAO,SAASC,gBAAiB,CAAEC,QAAQ,KAE/C/B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EAACC,GAAG,qBACbC,MAAM,aAAaC,YAAY,IAE/BC,MAAO1B,EAAM2B,KAAKO,UAClBN,SAAU5B,EAAM6B,cAAc,aAC9BC,OAAO,SACPC,gBAAiB,CAAEC,QAAQ,KAE/B/B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EAACC,GAAG,oBACbC,MAAM,YAAYC,YAAY,IAE9BC,MAAO1B,EAAM2B,KAAKQ,SAClBP,SAAU5B,EAAM6B,cAAc,YAC9BC,OAAO,SAASC,gBAAiB,CAAEC,QAAQ,KAE/C/B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EAACC,GAAG,oBACbC,MAAM,YAAYC,YAAY,IAE9BC,MAAO1B,EAAM2B,KAAKS,SAClBR,SAAU5B,EAAM6B,cAAc,YAC9BC,OAAO,SAASC,gBAAiB,CAAEC,QAAQ,yCCmE5CK,cAtGb,SAAAA,EAAYrC,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzC,KASR6C,SAAW,kBAAMC,IAAMC,IAAI,sDACxBC,KAAK,SAAAC,GAAQ,OAAIX,EAAKY,SAAS,CAACC,SAAUF,EAASG,UAXnCd,EAanBe,UAAY,kBAAMf,EAAKY,SAAS,CAC9BI,SAAU,CACR/B,GAAM,EACNR,KAAQ,GACRkB,aAAgB,GAChBC,UAAa,GACbC,SAAY,GACZC,SAAY,OApBGE,EAwBnB1B,aAAe,SAACwC,GAAD,OAAUd,EAAKY,SAAS,CACrCI,SAAUF,KAzBOd,EA4BnBiB,WAAa,WACXC,QAAQC,IAAInB,EAAKoB,MAAMJ,UACM,GAA1BhB,EAAKoB,MAAMJ,SAAS/B,GACrBuB,IAAMa,KAAK,oDAAXpB,OAAAqB,EAAA,EAAArB,CAAA,GAAoED,EAAKoB,MAAMJ,WAAWN,KAAM,WAE9FQ,QAAQC,IAAI,0BACZnB,EAAKe,YACLf,EAAKO,aAELgB,MAAM,SAACC,GAAD,OACNN,QAAQC,IAAI,8BAA+BK,KAG7ChB,IAAMiB,IAAI,qDAAuDzB,EAAKoB,MAAMJ,SAAS/B,GAAGyC,WAAY1B,EAAKoB,MAAMJ,UAAUN,KAAM,WAE7HQ,QAAQC,IAAI,yBACZnB,EAAKe,YACLf,EAAKO,aAELgB,MAAM,SAACC,GAAD,OACNN,QAAQC,IAAI,6BAA8BK,MAhD7BxB,EAoDnB2B,aAAe,WACgB,GAA1B3B,EAAKoB,MAAMJ,SAAS/B,IAEvBuB,IAAMoB,OAAO,qDAAuD5B,EAAKoB,MAAMJ,SAAS/B,GAAGyC,YAAYhB,KAAM,WAE3GQ,QAAQC,IAAI,4BACZnB,EAAKe,YACLf,EAAKO,aAELgB,MAAM,SAACC,GAAD,OACNN,QAAQC,IAAI,oCA9DGnB,EAkEnBT,cAAgB,SAAAd,GAAI,OAAI,SAAAoD,GACtB7B,EAAKY,SAAS,CAAEI,SAASf,OAAAqB,EAAA,EAAArB,CAAA,GAAMD,EAAKoB,MAAMJ,SAAlBf,OAAA6B,EAAA,EAAA7B,CAAA,GAA6BxB,EAAOoD,EAAME,OAAO3C,YAjEzEY,EAAKoB,MAAQ,CACXP,SAAU,GACVG,SAAU,IAEZhB,EAAKO,WACLP,EAAKe,YAPYf,wEAuEjB,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACC,QAAS,IACvBvE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMyB,MAAI,EAAC8C,GAAI,GACbxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACED,EAAAC,EAAAC,cAACwE,EAAD,CAAOrE,MAAQmC,KAAKiB,MAAMP,SAAWvC,aAAe6B,KAAK7B,iBAG7DX,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMyB,MAAI,EAAC8C,GAAI,GACbxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACED,EAAAC,EAAAC,cAACyE,EAAD,CAAMjD,KAAOc,KAAKiB,MAAMJ,SACtBuB,OAASpC,KAAKc,WAAa1B,cAAgBY,KAAKZ,gBAElD5B,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQ6E,QAAQ,YAAYC,MAAM,UAAU7D,MAAO,CAAC8D,WAAY,OAAQC,aAAc,QAASvE,QAAU8B,KAAKY,WAA9G,QAGApD,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQ6E,QAAQ,YAAYC,MAAM,YAAY7D,MAAO,CAAC8D,WAAY,OAAQC,aAAc,QAASvE,QAAU8B,KAAKwB,cAAhH,WAGAhE,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQ6E,QAAQ,YAAY5D,MAAO,CAAC6D,MAAO,QAASG,gBAAiB,UAAWF,WAAY,OAAQC,aAAc,QAASvE,QAAU8B,KAAKc,YAA1I,qBA3FM6B,IAAMC,WCKXC,mLARX,OACErF,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,OACbtF,EAAAC,EAAAC,cAACqF,EAAD,cAJUH,aCSEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.f363061d.chunk.js","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nfunction Lista(props) {\n    return (\n        <List component=\"nav\">\n        {\n            props.lista.map( jogo => (\n            <ListItem button onClick={() => props.onListSelect(jogo)}>\n                <ListItemText primary={jogo.name}  />\n            </ListItem>\n            ))\n        }\n        </List>\n    );\n}\n\nexport default Lista;","import React from 'react';\nimport TextField from '@material-ui/core/TextField'; \n\nfunction Form(props) {\n    return (\n        <form noValidate autoComplete=\"off\" style={{padding: '30px'}}>\n            <TextField\n                fullWidth id=\"standard-name\"\n                label=\"Name\" placeholder=\" A\"\n                value={props.item.name}\n                onChange={props.handleChanges('name')}\n                margin=\"normal\" \n                InputLabelProps={{ shrink: true }}/>\n\n            <TextField\n                fullWidth id=\"standard-realease\"\n                label=\"Release Date:\" placeholder=\" \"\n                value={props.item.release_date}\n                onChange={props.handleChanges('release_date')}\n                margin=\"normal\" InputLabelProps={{ shrink: true }}/>\n\n            <TextField\n                fullWidth id=\"standard-publisher\"\n                label=\"Publisher:\" placeholder=\" \"\n                \n                value={props.item.publisher}\n                onChange={props.handleChanges('publisher')}\n                margin=\"normal\" \n                InputLabelProps={{ shrink: true }}/>\n\n            <TextField\n                fullWidth id=\"standard-platform\"\n                label=\"Platform:\" placeholder=\" \"\n                \n                value={props.item.platform}\n                onChange={props.handleChanges('platform')}\n                margin=\"normal\" InputLabelProps={{ shrink: true }}/>\n\n            <TextField\n                fullWidth id=\"standard-category\"\n                label=\"Category:\" placeholder=\" \"\n                \n                value={props.item.category}\n                onChange={props.handleChanges('category')}\n                margin=\"normal\" InputLabelProps={{ shrink: true }}/>\n        </form>\n    );\n}\n\n  \nexport default Form;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Lista from './Lista.jsx';\nimport Form from './Form.jsx';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listData: [],\n      selected: {}\n    };\n    this.loadData();\n    this.onNewData();\n  }\n\n  loadData = () => axios.get('https://protected-shelf-19067.herokuapp.com/games/')\n    .then(response => this.setState({listData: response.data}));\n\n  onNewData = () => this.setState({\n    selected: { \n      'id': 0,\n      'name': '',\n      'release_date': '',\n      'publisher': '',\n      'platform': '',\n      'category': ''\n    }\n  });\n  \n  onListSelect = (data) => this.setState({\n    selected: data\n  });\n\n  onItemSave = () => {\n    console.log(this.state.selected);\n    if(this.state.selected.id == 0)\n      axios.post('https://protected-shelf-19067.herokuapp.com/games', {...this.state.selected}).then( () =>\n      {\n        console.log('post to api successful');\n        this.onNewData();\n        this.loadData();\n      }\n      ).catch((e) =>\n        console.log('post to api unsuccessful!!!', e)\n      );\n    else\n      axios.put('https://protected-shelf-19067.herokuapp.com/games/' + this.state.selected.id.toString(), this.state.selected).then( () =>\n      {\n        console.log('put to api successful');\n        this.onNewData();\n        this.loadData();\n      }\n      ).catch((e) =>\n        console.log('put to api unsuccessful!!!', e)\n      );    \n  };\n\n  onItemDelete = () => {\n    if(this.state.selected.id == 0) return;\n\n    axios.delete('https://protected-shelf-19067.herokuapp.com/games/' + this.state.selected.id.toString()).then( () =>\n    {\n      console.log('delete to api successful');\n      this.onNewData();\n      this.loadData();\n    }  \n    ).catch((e) =>\n      console.log('delete to api unsuccessful!!!')\n    );\n  }\n  \n  handleChanges = name => event => {\n    this.setState({ selected: { ...this.state.selected, [name]: event.target.value }});\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container spacing={24}>\n          <Grid item xs={5}>  \n            <Paper>\n              <Lista lista={ this.state.listData } onListSelect={ this.onListSelect }></Lista>\n            </Paper>\n          </Grid>\n          <Grid item xs={7}>\n            <Paper>\n              <Form item={ this.state.selected } \n                onSave={ this.onItemSave } handleChanges={ this.handleChanges }></Form>\n\n              <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '30px', marginBottom: '10px'}} onClick={ this.onNewData }>\n                Novo\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '30px', marginBottom: '10px'}} onClick={ this.onItemDelete }>\n                Deletar\n              </Button>\n              <Button variant=\"contained\" style={{color: 'white', backgroundColor: '#37C337', marginLeft: '30px', marginBottom: '10px'}} onClick={ this.onItemSave }>\n                Salvar\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n\nexport default Board;","import React, { Component } from 'react';\nimport Board from './components/Board.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Board></Board>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n    \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}